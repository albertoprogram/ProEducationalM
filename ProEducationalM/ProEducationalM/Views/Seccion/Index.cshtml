@model IEnumerable<ProEducationalM.Models.Seccion>
@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="es">
<head>
    <!--Las siguientes dos líneas son para limpiar caché-->
    <meta http-equiv="Expires" content="0" />
    <meta http-equiv="Pragma" content="no-cache" />

    <title>Index</title>

    <link rel="icon" href="@Url.Content("~/favicon.ico")" />

    @* Referencia a Bootstrap 4 - Las siguientes 4 líneas *@
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="X-UA-Compatible" content="ie-edge" />
    <link href="~/Scripts/Bootstrap/bootstrap-4.5.0-dist/css/bootstrap.min.css" rel="stylesheet" />

    @* Referencia a JQuery *@
    <script src="~/Scripts/JQuery/jquery-3.5.1.min.js"></script>

    @* Las siguientes dos líneas referencian la barra de carga de la página *@
    <script src="~/Scripts/pace/pace.min.js"></script>
    <link href="~/Styles/Themes_pace/CornerIndicator.css" rel="stylesheet" />

    @* Referencia a CSS de la página *@
    <link href="~/Styles/ProEducationalMStyles.css" rel="stylesheet" type="text/css" />

    @* Referencia a FontAwesome *@
    <script src="~/Scripts/FontAwesome/all.min.js"></script>

    @* Control de los mensajes a usuario *@
    <script type="text/javascript">
        $(document).ready(function () {
            setTimeout(function () {
                $("#successMessage").remove();
            }, 5000);

            setTimeout(function () {
                $("#errorMessage").remove();
            }, 5000);
        });
    </script>

    @* Style CSS para el momento de hacer submit del form *@
    <style type="text/css">
        form.disabled {
            pointer-events: none;
            opacity: 0.7;
        }
    </style>

    @* Style CSS para limpiar cajas de texto con X incorporado *@
    <style type="text/css">
        /* Clearable text inputs */
        .clearable {
            background: #fff url('../../Images_Icons/mJotv.gif') no-repeat right -10px center;
            border: 1px solid #999;
            padding: 3px 18px 3px 4px; /* Use the same right padding (18) in jQ! */
            border-radius: 3px;
            transition: background 0.4s;
        }

            .clearable.x {
                background-position: right 5px center;
            }
            /* (jQ) Show icon */
            .clearable.onX {
                cursor: pointer;
            }
            /* (jQ) hover cursor style */
            .clearable::-ms-clear {
                display: none;
                width: 0;
                height: 0;
            }
        /* Remove IE default X */
    </style>

    @* Estilo CSS de botón deshabilitado *@
    <style type="text/css">
        .btnDeshabilitado {
            background-color: #BDBDBD;
        }
    </style>

    @{
        TempData.Keep("ultimaPagina");
    }

    <style type="text/css">
        .blue {
            color: blue;
        }
    </style>

</head>
<body onload="PageLoadForm()">
    @* Content Start *@
    @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "formIndexSeccion" }))
    {

        <div class="container">

            <div class="row d-none d-lg-block" id="fila_superior_1">
                <div class="col">
                </div>
            </div>

            <div class="row" id="contenedor">
                <div class="col">
                    <h1>Paralelos</h1>
                </div>
            </div>

            <div class="row d-none d-lg-block" id="fila_superior_2">
                <div class="col">
                </div>
            </div>

            <p>@Html.ActionLink("Create New", "Create")</p>

            <div class="row" id="successMessage">
                @if (TempData["Exito"] != null)
                {
                    <div class="col-12 col-xl-5"></div>
                    <div class="col-12 col-xl-7  alert alert-success">
                        @TempData["Exito"]
                    </div>
                }
            </div>

            <div class="row" id="errorMessage">
                @if (TempData["ErrorMensaje"] != null)
                {
                    <div class="col-12 col-xl-5"></div>
                    <div class="col-12 col-xl-7 alert alert-danger">
                        @TempData["ErrorMensaje"]
                    </div>
                }
            </div>

            <div class="row">
                <div class="col">
                    @*@Html.TextBox("textBuscar", Session["TextoBusquedaColumnSeccion"].ToString(), new { placeholder = "Ingrese su búsqueda", @class = "form-control", maxlength = "50" })*@
                    <input id="textBuscar" name="textBuscar" value="@Session["TextoBusquedaColumnSeccion"].ToString()" placeholder="Ingrese su búsqueda" maxlength="50" class="form-control clearable" type="text" />
                </div>
            </div>

            <button id="SearchButton" name="button" value="SearchButton" type="button"
                    class="btn btn-primary" disabled onclick="ChangeHref()">
                Buscar
            </button>

            @*onclick="location.href='@Url.Action("Index", "Seccion")?busqueda=' + $('#textBuscar').val()">*@

            <div class="row">

                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="UFirstPage" name="button" value="UFirstPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnFirstPage()">
                        Primera
                    </button>
                </div>

                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="UPreviousPage" name="button" value="UPreviousPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnPreviousPage()">
                        << Anterior
                    </button>
                </div>

                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="UNextPage" name="button" value="UNextPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnNextPage()">
                        Siguiente >>
                    </button>
                </div>
                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="ULastPage" name="button" value="ULastPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnLastPage()">
                        Última
                    </button>
                </div>

            </div>

            <div class="row">
                <div class="col-2">@Html.Label("totalRegistros", "Total de registros: " + TempData["countSecciones"].ToString())</div>
                <div class="col-2">@Html.Label("paginaActual", "Página actual: " + TempData["paginaActual"].ToString())</div>
                <div class="col-2">@Html.Label("ultimaPagina", "Última página: " + TempData["ultimaPagina"].ToString())</div>
                <div class="col-2">@Html.Label("registrosMostrados", "Registros Mostrados: " + TempData["countPageSecciones"].ToString())</div>
                <div class="col-4">
                    <label>
                        Máximo de registros por página: @Html.DropDownList("maximoPagina", new List<SelectListItem> {
new SelectListItem() {Text = "3",Value="3"},
new SelectListItem() {Text = "5", Value= "5"},
new SelectListItem() {Text = "10", Value = "10"},
new SelectListItem() {Text = "15", Value = "15"},
new SelectListItem() {Text = "20", Value = "20"},
new SelectListItem() {Text = "30", Value = "30"},
new SelectListItem() {Text = "50", Value = "50"},
new SelectListItem() {Text = "100", Value = "100"}
},
new { @class = "form-control", onchange = "ChangeHrefDropDownListCantRegPag()" })
                    </label>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <button id="UMultipleItemsSelected" name="button" value="UMultipleItemsSelected" type="button" class="btn btn-danger"
                            onclick="GetCheckBoxesChecked()">
                        Eliminar
                    </button>
                </div>
            </div>

            <table class="table table-bordered">
                <tr>
                    <th>
                        <input type="checkbox" name="checkBoxAll" id="checkBoxAll" class="custom-checkbox" />
                    </th>
                    <th>
                        <a href="javascript:void(0);" onclick="ChangeHrefColumnHeaderSeccion();">
                            <span>@Html.DisplayNameFor(model => model.NombreSeccion)</span>
                            @{
                                if (Session["ColumnSeccionIndexSeccionOrder"].ToString() == "ASC")
                                {
                                    <i class="fa fa-caret-up" aria-hidden="true"></i>
                                }
                                else if (Session["ColumnSeccionIndexSeccionOrder"].ToString() == "DESC")
                                {
                                    <i class="fa fa-caret-down" aria-hidden="true"></i>
                                }
                                else
                                {
                                    <i class="fa fa-caret-up" aria-hidden="true"></i>
                                }
                            }
                        </a>
                    </th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td id="checkboxes">
                            <input type="checkbox" name="ID" value="@item.ID" class="custom-ckeckbox" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NombreSeccion)
                        </td>
                    </tr>
                }
            </table>

            <div class="row">
                <div class="col-2">@Html.Label("totalRegistros", "Total de registros: " + TempData["countSecciones"].ToString())</div>
                <div class="col-2">@Html.Label("paginaActual", "Página actual: " + TempData["paginaActual"].ToString())</div>
                <div class="col-2">@Html.Label("ultimaPagina", "Última página: " + TempData["ultimaPagina"].ToString())</div>
                <div class="col-2">@Html.Label("registrosMostrados", "Registros Mostrados: " + TempData["countPageSecciones"].ToString())</div>
                <div class="col-4">@Html.Label("LabelmaximoPagina", "Máximo de registros por página : " + TempData["maximoPagina"].ToString())</div>
            </div>

            <div class="row">

                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="FirstPage" name="button" value="FirstPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnFirstPage()">
                        Primera
                    </button>
                </div>

                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="PreviousPage" name="button" value="PreviousPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnPreviousPage()">
                        << Anterior
                    </button>
                </div>

                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="NextPage" name="button" value="NextPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnNextPage()">
                        Siguiente >>
                    </button>
                </div>
                <div class="col-12 order-last col-sm-12 order-last col-md-2 order-1 col-lg-2 order-1 col-xl-2 order-1">
                    <button id="LastPage" name="button" value="LastPage" type="button" class="btn btn-primary"
                            onclick="ChangeHrefBtnLastPage()">
                        Última
                    </button>
                </div>

            </div>

        </div>

    }

    @* End of content *@

    @* Form load event *@
    <script type="text/javascript">
        function PageLoadForm() {

            //Las siguientes dos líneas permiten colocar el foco (primera línea) y hacerlo al final del texto (segunda línea)
            document.getElementById("textBuscar").focus();
            document.getElementById("textBuscar").selectionStart = document.getElementById("textBuscar").selectionEnd = 150000;

            //Este trozo de código (3 líneas) funciona bien para colocar el cursor al final del texto en un input,
            //pero no permite que se avance con la barra espaciadora
            //var val = document.getElementById("textBuscar").value; //store the value of the element
            //document.getElementById("textBuscar").value = ''; //clear the value of the element
            //document.getElementById("textBuscar").value = val; //set that value back.

        }
    </script>

    @*Autocompletado deshabilitado*@
    <script type="text/javascript">
        $(document).ready(function () {
            $('#textBuscar').attr("autocomplete", "off");
            $('#maximoPagina').attr("autocomplete", "off");
        })
    </script>

    @* Función que impide que se vaya atrás con las teclas Backspace o Delete *@
    <script type="text/javascript">
        window.addEventListener('keydown', function (e) {
            var key = e.keyCode || e.which;
            if (key == 8 /*BACKSPACE*/ || key == 46/*DELETE*/) {
                var len = window.location.href.length;
                if (window.location.href[len - 1] != '#') window.location.href += "#";
            }
        }, false);
    </script>

    @* Función que impide volver atrás con el botón del navegador *@
    @* En Chrome funciona *@
    @* En Firefox funciona *@
    @* En Firefox Developer Edition funciona *@
    @* En Internet Explorer funciona *@
    @* En Edge funciona *@
    @* En Opera funciona *@
    <script type="text/javascript">
        history.pushState(null, null, location.href);
        history.back();
        history.forward();
        window.onpopstate = function () { history.go(1); };
    </script>

    @* Control de habilitado y deshabilitado de botones de paginado *@
    <script type="text/javascript">

        document.getElementById("maximoPagina").value = @Session["cantRegpagSeccion"];

        var buttonLastPage = document.getElementById('LastPage');
        var buttonNextPage = document.getElementById('NextPage');
        var buttonFirstPage = document.getElementById('FirstPage');
        var buttonPreviousPage = document.getElementById('PreviousPage');
        var buttonULastPage = document.getElementById('ULastPage');
        var buttonUNextPage = document.getElementById('UNextPage');
        var buttonUFirstPage = document.getElementById('UFirstPage');
        var buttonUPreviousPage = document.getElementById('UPreviousPage');

        if (('@(TempData["countSecciones"])' == '0')) {

            buttonFirstPage.disabled = true;
            buttonNextPage.disabled = true;
            buttonPreviousPage.disabled = true;
            buttonLastPage.disabled = true;

            buttonUFirstPage.disabled = true;
            buttonUNextPage.disabled = true;
            buttonUPreviousPage.disabled = true;
            buttonULastPage.disabled = true;

        }
        else if ('@(TempData["paginaActual"])' == '@(TempData["ultimaPagina"])' && @(Convert.ToInt32(TempData["countSecciones"])) <= @(Convert.ToInt32(TempData["maximoPagina"]))) {

            buttonFirstPage.disabled = true;
            buttonNextPage.disabled = true;
            buttonPreviousPage.disabled = true;
            buttonLastPage.disabled = true;

            buttonUFirstPage.disabled = true;
            buttonUNextPage.disabled = true;
            buttonUPreviousPage.disabled = true;
            buttonULastPage.disabled = true;

            }
        else if ('@(TempData["paginaActual"])' == '@(TempData["ultimaPagina"])') {

            buttonLastPage.disabled = true;
            buttonNextPage.disabled = true;

            buttonFirstPage.disabled = false;
            buttonPreviousPage.disabled = false;

            buttonULastPage.disabled = true;
            buttonUNextPage.disabled = true;

            buttonUFirstPage.disabled = false;
            buttonUPreviousPage.disabled = false;

        }
        else if ('@(TempData["paginaActual"])' == '1') {

            buttonLastPage.disabled = false;
            buttonNextPage.disabled = false;

            buttonFirstPage.disabled = true;
            buttonPreviousPage.disabled = true;

            buttonULastPage.disabled = false;
            buttonUNextPage.disabled = false;

            buttonUFirstPage.disabled = true;
            buttonUPreviousPage.disabled = true;

        }
        else {

            buttonLastPage.disabled = false;
            buttonNextPage.disabled = false;

            buttonFirstPage.disabled = false;
            buttonPreviousPage.disabled = false;

            buttonULastPage.disabled = false;
            buttonUNextPage.disabled = false;

            buttonUFirstPage.disabled = false;
            buttonUPreviousPage.disabled = false;

        }

    </script>

    @* Paso de información al controlador al presionar clic al botón de búsqueda *@
    <script type="text/javascript">

        function ChangeHref(){
            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = document.getElementById("textBuscar").value;
            var btn = 'SearchButton';

            window.location.href = url + '/?button=' + btn + '&busqueda=' + document.getElementById("textBuscar").value;
   }

    </script>

    @* Paso de información al controlador al cambiar el valor del drop down list
        de cantidad de registros por página a mostrar *@
    <script type="text/javascript">

        function ChangeHrefDropDownListCantRegPag(){
            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = $('#textBuscar').val();
            var btn = 'DropDownListCantRegPag';
            var maximoPagina = $('#maximoPagina').val();
            window.location.href = url + '/?button=' + btn + '&maximoPagina=' + maximoPagina + '&busqueda=' + txtVal;
   }

    </script>

    @* Paso de información al controlador al presionar la cabecera de la columna Paralelo *@
    <script type="text/javascript">

        function ChangeHrefColumnHeaderSeccion() {

            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = $('#textBuscar').val();
            var btn = 'ColumnHeaderSeccion';
            var maximoPagina = $('#maximoPagina').val();
            var columnaSeccionOrden = '@Session["ColumnSeccionIndexSeccionOrder"].ToString()';
            window.location.href = url + '/?button=' + btn + '&maximoPagina=' + maximoPagina + '&ColumnaSeccionOrden=' + columnaSeccionOrden + '&busqueda=' + txtVal;

   }

    </script>

    @* Paso de información al controlador al presionar el botón primera página *@
    <script type="text/javascript">

        function ChangeHrefBtnFirstPage() {

            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = $('#textBuscar').val();
            var btn = 'FirstPage';
            var maximoPagina = $('#maximoPagina').val();
            var columnaSeccionOrden = '@Session["ColumnSeccionIndexSeccionOrder"].ToString()';
            window.location.href = url + '/?button=' + btn + '&maximoPagina=' + maximoPagina + '&ColumnaSeccionOrden=' + columnaSeccionOrden + '&busqueda=' + txtVal;

   }

    </script>

    @* Paso de información al controlador al presionar el botón página anterior *@
    <script type="text/javascript">

        function ChangeHrefBtnPreviousPage() {

            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = $('#textBuscar').val();
            var btn = 'PreviousPage';
            var maximoPagina = $('#maximoPagina').val();
            var columnaSeccionOrden = '@Session["ColumnSeccionIndexSeccionOrder"].ToString()';
            window.location.href = url + '/?button=' + btn + '&maximoPagina=' + maximoPagina + '&ColumnaSeccionOrden=' + columnaSeccionOrden + '&busqueda=' + txtVal;

   }

    </script>

    @* Paso de información al controlador al presionar el botón siguiente página *@
    <script type="text/javascript">

        function ChangeHrefBtnNextPage() {

            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = $('#textBuscar').val();
            var btn = 'NextPage';
            var maximoPagina = $('#maximoPagina').val();
            var columnaSeccionOrden = '@Session["ColumnSeccionIndexSeccionOrder"].ToString()';
            window.location.href = url + '/?button=' + btn + '&maximoPagina=' + maximoPagina + '&ColumnaSeccionOrden=' + columnaSeccionOrden + '&busqueda=' + txtVal;

   }

    </script>

    @* Paso de información al controlador al presionar el botón última página *@
    <script type="text/javascript">

        function ChangeHrefBtnLastPage() {

            var url = '@Url.Action("Index", "Seccion")';
            var txtVal = $('#textBuscar').val();
            var btn = 'LastPage';
            var maximoPagina = $('#maximoPagina').val();
            var columnaSeccionOrden = '@Session["ColumnSeccionIndexSeccionOrder"].ToString()';
            window.location.href = url + '/?button=' + btn + '&maximoPagina=' + maximoPagina + '&ColumnaSeccionOrden=' + columnaSeccionOrden + '&busqueda=' + txtVal;

   }

    </script>

    @* Función para habilitar deshabilitar botón Buscar desde caja de texto de búsqueda
        También controla el comportamiento de la caja de texto de búsqueda *@
    <script type="text/javascript">
            $(document).ready(function () {

                $('#textBuscar').on('input change keydown paste click', function (e) {

                let cadena = document.getElementById("textBuscar").value;

                document.getElementById("textBuscar").value = TratamientoCaracteres(cadena);

                $(this).val($(this).val().trimLeft());

                $(this).val($(this).val().toUpperCase());

                var longitudTexto = $(this).val().length;

                if (longitudTexto > 50) {
                    $(this).val($(this).val().substr(0, 50));
                }

                if ($('#textBuscar').val() != '') {

                    if ($('form').hasClass('disabled')) {
                        $('#SearchButton').attr('disabled', 'disabled');
                        $('#SearchButton').removeClass('btn-success');
                        $('#SearchButton').addClass('btnDeshabilitado');
                    }
                    else {
                        $('#SearchButton').removeAttr('disabled');
                        $('#SearchButton').removeClass('btnDeshabilitado');
                        $('#SearchButton').addClass('btn-success');
                    }

                }
                else {
                    $('#SearchButton').attr('disabled', 'disabled');
                    $('#SearchButton').removeClass('btn-success');
                    $('#SearchButton').addClass('btnDeshabilitado');
                }

                    if (e.type == 'keydown') {

                    var keyCodePressed = e.keyCode;

                        var code = e.which;

                        if ((code == 13 || keyCodePressed == 13) && $('#textBuscar').val() != '') {


                        var txtVal = $('#textBuscar').val();
                        var btn = 'SearchButton';

                        var url = '@Url.Action("Index", "Seccion")';

                        var dataString = 'busqueda=' + txtVal + '&button=' + btn;
                        $.ajax({
                            url: '/Seccion/Index',
                            type: 'GET',
                            data: dataString,
                            success: function () {

                            }
                        });

                    }
                    else if (keyCodePressed == 8) {

                        var subCadena = document.getElementById("textBuscar").value;

                        subCadena = subCadena.substring(0, subCadena.length - 1);

                        // Código para obtener el texto seleccionado en la caja de búsqueda
                        //BEGIN*********************************************************************
                        //function getSelectionText() {
                            var textoSeleccionado = "";
                            var activeEl = document.activeElement;
                            var activeElTagName = activeEl ? activeEl.tagName.toLowerCase() : null;
                            if (
                                (activeElTagName == "textarea") || (activeElTagName == "input" &&
                                    /^(?:text|search|password|tel|url)$/i.test(activeEl.type)) &&
                                (typeof activeEl.selectionStart == "number")
                            ) {
                                textoSeleccionado = document.getElementById("textBuscar").value.slice(activeEl.selectionStart, activeEl.selectionEnd);
                        }

                            if (document.getElementById("textBuscar").value == textoSeleccionado) {
                                subCadena = '';
                            }
                        //};
                        //END*********************************************************************

                        if (subCadena === '') {

                            var url = '@Url.Action("Index", "Seccion")';

                            window.location.href = url + '/?busqueda=' + subCadena;
                        }
                    }

                }

            });
            });

    </script>

    @* Al presionar enter en la caja de búsqueda *@
    @*<script type="text/javascript">

            $("#textBuscar").keydown(function (event) {

                if (event.which == 13) {

                    var txtVal = $('#textBuscar').val();
                    var btn = 'SearchButton';

                    var dataString = 'busqueda=' + txtVal + '&button=' + btn;
                    $.ajax({
                        url: '/Seccion/Index',
                        type: 'GET',
                        data: dataString,
                        success: function () {
                        }
                    });

                }

            });

        </script>*@

    @* Función que permite deshabilitar formulario al momento de hacer submit *@
    <script type="text/javascript">
        $('form').submit(function (e) {

            // if the form is disabled don't allow submit
            if ($(this).hasClass('disabled')) {
                e.preventDefault();
                return;
            }

            $(this).addClass('disabled');

            $('#SearchButton').addClass('btnDeshabilitado');

            $('#SearchButton').removeClass('btn-success');

        });
    </script>

    @* Permite habilitar botón de búsqueda si hay texto en el textbox *@
    <script type="text/javascript">
        $(document).ready(function () {
            if ($('#textBuscar').val() != '') {
                $('#SearchButton').removeAttr('disabled');
                $('#SearchButton').removeClass('btnDeshabilitado');
                $('#SearchButton').addClass('btn-success');
            }
        });
    </script>

    @* Permite poner x en el input para borrar el texto que se escribió
        Requiere agregar la clase CSS clearable de la cabecera al input
        que debe tener la x*@
    <script type="text/javascript">

        /**
        * Clearable text inputs
        */
        function tog(v) { return v ? 'addClass' : 'removeClass'; }
        $(document).on('input focus', '.clearable', function () {
            $(this)[tog(this.value)]('x');
        }).on('mousemove', '.x', function (e) {
            $(this)[tog(this.offsetWidth - 18 < e.clientX - this.getBoundingClientRect().left)]('onX');
        }).on('touchstart click', '.onX', function (ev) {
            ev.preventDefault();
            $(this).removeClass('x onX').val('').change();
            $('#SearchButton').attr('disabled', 'disabled');
            $('#SearchButton').removeClass('btn-success');
            $('#SearchButton').addClass('btnDeshabilitado');

            var url = '@Url.Action("Index", "Seccion")';

            window.location.href = url + '/?busqueda=';

        });

        // $('.clearable').trigger("input");
        // Uncomment the line above if you pre-fill values from LS or server
    </script>

    @* Script para marcar/desmarcar todos los checkboxes cuando se marca el de la cabecera *@
    <script type="text/javascript">
        function toggleChecked(status) {
            $("#checkboxes input").each(function () {
                // Set the checked status of each to match the
                // checked status of the check all checkbox:
                $(this).prop("checked", status);
            });
        }

        $(document).ready(function () {

            //Set the default value of the global checkbox to true:
            $("#checkBoxAll").prop('checked', false);

            // Attach the call to toggleChecked to the
            // click event of the global checkbox:
            $("#checkBoxAll").click(function () {
                var status = $("#checkBoxAll").prop('checked');
                toggleChecked(status);
            });
        });
    </script>

    @* Obtener todos los checkboxes marcados en la página *@
    <script type="text/javascript">

        function GetCheckBoxesChecked() {

            var data = [];

            $("input[type=checkbox]:checked").each(function () {
                //cada elemento seleccionado
                data.push(this.value);
                // alert($(this).val());
            });

            //alert(data);

            var uri = '@Url.Action("Delete","Seccion")';

            //var uri = '/Seccion/Index';

            //var arr = [4, 8, 15, 16, 23, 42];

            $.ajax({
                url: '/Seccion/Delete',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json; charset=utf-8',
                success: function () {

                    window.location.reload();

                }
            });

        }

    </script>

    <script src="~/Scripts/Generales/Caracteres.js"></script>

    @* Referencia a Bootstrap 4 - Las siguientes 3 líneas *@
    @*<script src="~/Scripts/Bootstrap/bootstrap-4.5.0-dist/js/jquery-3.5.1.slim.min.js"></script>*@
    <script src="~/Scripts/JQuery/jquery-3.5.1.min.js"></script>
    <script src="~/Scripts/Bootstrap/bootstrap-4.5.0-dist/js/popper.min.js"></script>
    <script src="~/Scripts/Bootstrap/bootstrap-4.5.0-dist/js/bootstrap.min.js"></script>
</body>
</html>
